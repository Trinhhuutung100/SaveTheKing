%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: 909ec98ef318c9741b25df4a76d650ae, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 3
  _shaderVariants:
  - shaderCompilerPlatform: 5
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  _usedByLunaBuild:
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    passType: 0
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 907
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0 = in_TEXCOORD0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/NoodleOutline
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tfloat _OutlineWidth;\nin highp vec4 in_POSITION0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.x = _OutlineWidth + 1.0;\n    u_xlat0.xyz
            = u_xlat0.xxx * in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _OutlineColor;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvoid main()\n{\n    SV_Target0 = _OutlineColor;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
          passType: 0
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
          passType: 0
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/NoodleOutline
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
      Tags: []
    Shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
    ShaderPath: Assets/Assets/Material/NoodleOutline.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
      passType: 0
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: beabf0b2cb6b78e4fadc490e544b09da, type: 3}
      passType: 0
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0 = in_TEXCOORD0;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Outline
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tfloat _OutlineWidth;\nin highp vec4 in_POSITION0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.x = _OutlineWidth + 1.0;\n    u_xlat0.xyz
            = u_xlat0.xxx * in_POSITION0.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _OutlineColor;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvoid main()\n{\n    SV_Target0 = _OutlineColor;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
          passType: 0
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
          passType: 0
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Outline
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
      Tags: []
    Shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
    ShaderPath: Assets/Assets/Material/Outline.shader
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
      passType: 0
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: c4dbcd2a8f5b88f41bd66882251511af, type: 3}
      passType: 0
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform
            mediump samplerCube unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nin highp  vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nbvec3 u_xlatb8;\nmediump float u_xlat16_9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nmediump float u_xlat16_13;\nmediump
            vec3 u_xlat16_14;\nfloat u_xlat15;\nfloat u_xlat16;\nvec3 u_xlat24;\nmediump
            vec3 u_xlat16_24;\nmediump vec3 u_xlat16_28;\nfloat u_xlat30;\nfloat
            u_xlat31;\nfloat u_xlat45;\nfloat u_xlat46;\nfloat u_xlat47;\nbool u_xlatb47;\nmediump
            float u_xlat16_49;\nmediump float u_xlat16_56;\nmediump float u_xlat16_57;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat1.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat3.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat46 = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot((-u_xlat1.xyz),
            vs_TEXCOORD1.xyz);\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n   
            u_xlat16_4.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_4.xxx) + (-u_xlat1.xyz);\n   
            u_xlatb47 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb47){\n       
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n        u_xlat47 = inversesqrt(u_xlat47);\n       
            u_xlat5.xyz = vec3(u_xlat47) * u_xlat16_4.xyz;\n        u_xlat6.xyz =
            (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat47 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat47 =
            min(u_xlat6.z, u_xlat47);\n        u_xlat6.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat47) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_49 = (-u_xlat46)
            * 0.699999988 + 1.70000005;\n    u_xlat16_49 = u_xlat46 * u_xlat16_49;\n   
            u_xlat16_49 = u_xlat16_49 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_49);\n    u_xlat16_9 = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9 = unity_SpecCube0_HDR.w * u_xlat16_9 + 1.0;\n    u_xlat16_9
            = log2(u_xlat16_9);\n    u_xlat16_9 = u_xlat16_9 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_9 = exp2(u_xlat16_9);\n    u_xlat16_9 = u_xlat16_9 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_24.xyz = u_xlat16_5.xyz * vec3(u_xlat16_9);\n    u_xlatb47 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb47){\n        u_xlatb47
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb47){\n           
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat47
            = inversesqrt(u_xlat47);\n            u_xlat6.xyz = vec3(u_xlat47) *
            u_xlat16_4.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat47 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat47
            = min(u_xlat7.z, u_xlat47);\n            u_xlat7.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat47) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_49);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = log2(u_xlat16_11.x);\n        u_xlat16_11.x = u_xlat16_11.x
            * unity_SpecCube1_HDR.y;\n        u_xlat16_11.x = exp2(u_xlat16_11.x);\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = vec3(u_xlat16_9)
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat24.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_24.xyz = u_xlat24.xyz;\n   
            }\n    u_xlat47 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat47
            = inversesqrt(u_xlat47);\n    u_xlat5.xyz = vec3(u_xlat47) * vs_TEXCOORD1.xyz;\n   
            u_xlat16_11.xyz = u_xlat16_2.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n   
            u_xlat16_9 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_12.xyz
            = u_xlat3.xyz * vec3(u_xlat16_9);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat45 = dot(u_xlat5.xyz,
            u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat16 = dot(u_xlat5.xyz,
            u_xlat0.xyz);\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_56 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_56
            = u_xlat0.x * u_xlat16_56;\n    u_xlat16_56 = u_xlat16_56 * u_xlat46
            + -0.5;\n    u_xlat16_57 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_57
            * u_xlat16_57;\n    u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_13;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_57
            + 1.0;\n    u_xlat16_13 = -abs(u_xlat45) + 1.0;\n    u_xlat16_28.x =
            u_xlat16_13 * u_xlat16_13;\n    u_xlat16_28.x = u_xlat16_28.x * u_xlat16_28.x;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_28.x;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_13 + 1.0;\n    u_xlat16_56 = u_xlat16_56 * u_xlat16_57;\n   
            u_xlat15 = u_xlat1.x * u_xlat16_56;\n    u_xlat30 = u_xlat46 * u_xlat46;\n   
            u_xlat30 = max(u_xlat30, 0.00200000009);\n    u_xlat31 = (-u_xlat30)
            + 1.0;\n    u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat30;\n    u_xlat31
            = u_xlat1.x * u_xlat31 + u_xlat30;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat1.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat30
            * u_xlat30;\n    u_xlat46 = u_xlat16 * u_xlat31 + (-u_xlat16);\n    u_xlat16
            = u_xlat46 * u_xlat16 + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat16 = u_xlat16 * u_xlat16 + 1.00000001e-07;\n    u_xlat16 = u_xlat31
            / u_xlat16;\n    u_xlat45 = u_xlat45 * u_xlat16;\n    u_xlat45 = u_xlat1.x
            * u_xlat45;\n    u_xlat45 = u_xlat45 * 3.14159274;\n    u_xlat45 = max(u_xlat45,
            0.0);\n    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;\n    u_xlat30 = float(1.0)
            / u_xlat30;\n    u_xlat16_56 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb1 = u_xlat16_56!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat1.x;\n    u_xlat16_9 = (-u_xlat16_9) + _Glossiness;\n   
            u_xlat16_9 = u_xlat16_9 + 1.0;\n    u_xlat16_9 = clamp(u_xlat16_9, 0.0,
            1.0);\n    u_xlat16_28.xyz = vec3(u_xlat15) * _LightColor0.xyz;\n   
            u_xlat1.xyz = vec3(u_xlat45) * _LightColor0.xyz;\n    u_xlat16_56 = (-u_xlat0.x)
            + 1.0;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_56;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_56 = u_xlat16_56 * u_xlat16_57;\n   
            u_xlat16_14.xyz = (-u_xlat16_11.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_14.xyz
            = u_xlat16_14.xyz * vec3(u_xlat16_56) + u_xlat16_11.xyz;\n    u_xlat0.xyw
            = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyw = u_xlat16_12.xyz *
            u_xlat16_28.xyz + u_xlat0.xyw;\n    u_xlat16_24.xyz = u_xlat16_24.xyz
            * vec3(u_xlat30);\n    u_xlat16_12.xyz = (-u_xlat16_11.xyz) + vec3(u_xlat16_9);\n   
            u_xlat16_11.xyz = vec3(u_xlat16_13) * u_xlat16_12.xyz + u_xlat16_11.xyz;\n   
            u_xlat0.xyz = u_xlat16_24.xyz * u_xlat16_11.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD3.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump float _Metallic;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin highp  vec3 vs_TEXCOORD1;\nin
            highp  vec3 vs_TEXCOORD2;\nin mediump  vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec4 u_xlat16_4;\nvec4
            u_xlat5;\nmediump vec4 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3
            u_xlat16_10;\nbvec3 u_xlatb11;\nmediump vec3 u_xlat16_12;\nmediump vec3
            u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat15;\nfloat u_xlat16;\nfloat
            u_xlat30;\nfloat u_xlat31;\nfloat u_xlat45;\nfloat u_xlat46;\nfloat u_xlat47;\nbool
            u_xlatb47;\nmediump float u_xlat16_49;\nmediump float u_xlat16_51;\nmediump
            float u_xlat16_55;\nmediump float u_xlat16_57;\nmediump float u_xlat16_58;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat1.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat3.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat46 = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot((-u_xlat1.xyz),
            vs_TEXCOORD1.xyz);\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n   
            u_xlat16_4.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_4.xxx) + (-u_xlat1.xyz);\n   
            u_xlat5.xyz = vs_TEXCOORD1.xyz;\n    u_xlat5.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat5);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat5);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat5);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD3.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlatb47 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb47){\n        u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat47 = inversesqrt(u_xlat47);\n        u_xlat5.xyz = vec3(u_xlat47)
            * u_xlat16_4.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat5.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat47 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat47 =
            min(u_xlat7.z, u_xlat47);\n        u_xlat7.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat47) + u_xlat7.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_49 = (-u_xlat46)
            * 0.699999988 + 1.70000005;\n    u_xlat16_49 = u_xlat46 * u_xlat16_49;\n   
            u_xlat16_49 = u_xlat16_49 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_49);\n    u_xlat16_51 = u_xlat16_5.w + -1.0;\n   
            u_xlat16_51 = unity_SpecCube0_HDR.w * u_xlat16_51 + 1.0;\n    u_xlat16_51
            = log2(u_xlat16_51);\n    u_xlat16_51 = u_xlat16_51 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_51 = exp2(u_xlat16_51);\n    u_xlat16_51 = u_xlat16_51 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat16_5.xyz * vec3(u_xlat16_51);\n    u_xlatb47
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb47){\n       
            u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb47){\n           
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat47
            = inversesqrt(u_xlat47);\n            u_xlat7.xyz = vec3(u_xlat47) *
            u_xlat16_4.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat47 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat47
            = min(u_xlat8.z, u_xlat47);\n            u_xlat8.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat47) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_49);\n        u_xlat16_55 = u_xlat16_4.w + -1.0;\n       
            u_xlat16_55 = unity_SpecCube1_HDR.w * u_xlat16_55 + 1.0;\n        u_xlat16_55
            = log2(u_xlat16_55);\n        u_xlat16_55 = u_xlat16_55 * unity_SpecCube1_HDR.y;\n       
            u_xlat16_55 = exp2(u_xlat16_55);\n        u_xlat16_55 = u_xlat16_55 *
            unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat16_4.xyz * vec3(u_xlat16_55);\n       
            u_xlat5.xyz = vec3(u_xlat16_51) * u_xlat16_5.xyz + (-u_xlat16_12.xyz);\n       
            u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_12.xyz;\n       
            u_xlat16_10.xyz = u_xlat10.xyz;\n    }\n    u_xlat47 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat47 = inversesqrt(u_xlat47);\n    u_xlat5.xyz
            = vec3(u_xlat47) * vs_TEXCOORD1.xyz;\n    u_xlat16_12.xyz = u_xlat16_2.xyz
            * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat16_12.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_12.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_51 =
            (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_13.xyz = u_xlat3.xyz
            * vec3(u_xlat16_51);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat45 = dot(u_xlat5.xyz,
            u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat16 = dot(u_xlat5.xyz,
            u_xlat0.xyz);\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_55 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_55
            = u_xlat0.x * u_xlat16_55;\n    u_xlat16_55 = u_xlat16_55 * u_xlat46
            + -0.5;\n    u_xlat16_57 = (-u_xlat1.x) + 1.0;\n    u_xlat16_58 = u_xlat16_57
            * u_xlat16_57;\n    u_xlat16_58 = u_xlat16_58 * u_xlat16_58;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_58;\n    u_xlat16_57 = u_xlat16_55 * u_xlat16_57
            + 1.0;\n    u_xlat16_58 = -abs(u_xlat45) + 1.0;\n    u_xlat16_14.x =
            u_xlat16_58 * u_xlat16_58;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_58 = u_xlat16_58 * u_xlat16_14.x;\n    u_xlat16_55 = u_xlat16_55
            * u_xlat16_58 + 1.0;\n    u_xlat16_55 = u_xlat16_55 * u_xlat16_57;\n   
            u_xlat15 = u_xlat1.x * u_xlat16_55;\n    u_xlat30 = u_xlat46 * u_xlat46;\n   
            u_xlat30 = max(u_xlat30, 0.00200000009);\n    u_xlat31 = (-u_xlat30)
            + 1.0;\n    u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat30;\n    u_xlat31
            = u_xlat1.x * u_xlat31 + u_xlat30;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat1.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat30
            * u_xlat30;\n    u_xlat46 = u_xlat16 * u_xlat31 + (-u_xlat16);\n    u_xlat16
            = u_xlat46 * u_xlat16 + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat16 = u_xlat16 * u_xlat16 + 1.00000001e-07;\n    u_xlat16 = u_xlat31
            / u_xlat16;\n    u_xlat45 = u_xlat45 * u_xlat16;\n    u_xlat45 = u_xlat1.x
            * u_xlat45;\n    u_xlat45 = u_xlat45 * 3.14159274;\n    u_xlat45 = max(u_xlat45,
            0.0);\n    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;\n    u_xlat30 = float(1.0)
            / u_xlat30;\n    u_xlat16_55 = dot(u_xlat16_12.xyz, u_xlat16_12.xyz);\n   
            u_xlatb1 = u_xlat16_55!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat1.x;\n    u_xlat16_51 = (-u_xlat16_51) +
            _Glossiness;\n    u_xlat16_51 = u_xlat16_51 + 1.0;\n    u_xlat16_51 =
            clamp(u_xlat16_51, 0.0, 1.0);\n    u_xlat16_6.xyz = _LightColor0.xyz
            * vec3(u_xlat15) + u_xlat16_6.xyz;\n    u_xlat1.xyz = vec3(u_xlat45)
            * _LightColor0.xyz;\n    u_xlat16_55 = (-u_xlat0.x) + 1.0;\n    u_xlat16_57
            = u_xlat16_55 * u_xlat16_55;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n   
            u_xlat16_55 = u_xlat16_55 * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_12.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_55)
            + u_xlat16_12.xyz;\n    u_xlat0.xyw = u_xlat1.xyz * u_xlat16_14.xyz;\n   
            u_xlat0.xyw = u_xlat16_13.xyz * u_xlat16_6.xyz + u_xlat0.xyw;\n    u_xlat16_6.xyz
            = u_xlat16_10.xyz * vec3(u_xlat30);\n    u_xlat16_10.xyz = (-u_xlat16_12.xyz)
            + vec3(u_xlat16_51);\n    u_xlat16_10.xyz = vec3(u_xlat16_58) * u_xlat16_10.xyz
            + u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_10.xyz
            + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Screw
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: Custom/Screw
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp  vec2 vs_TEXCOORD0;\nin highp  vec3 vs_TEXCOORD1;\nin highp  vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat6;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nbool u_xlatb10;\nfloat
            u_xlat11;\nmediump float u_xlat16_13;\nfloat u_xlat15;\nfloat u_xlat16;\nfloat
            u_xlat17;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat1.xyz
            = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz
            = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat15 = max(u_xlat15, 0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;\n    u_xlat15 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz
            = vec3(u_xlat15) * vs_TEXCOORD1.xyz;\n    u_xlat15 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat6 = (-_Glossiness) + 1.0;\n    u_xlat11 = u_xlat6
            * u_xlat6;\n    u_xlat11 = max(u_xlat11, 0.00200000009);\n    u_xlat16
            = u_xlat11 * u_xlat11;\n    u_xlat17 = u_xlat15 * u_xlat16 + (-u_xlat15);\n   
            u_xlat15 = u_xlat17 * u_xlat15 + 1.0;\n    u_xlat15 = u_xlat15 * u_xlat15
            + 1.00000001e-07;\n    u_xlat16 = u_xlat16 * 0.318309873;\n    u_xlat15
            = u_xlat16 / u_xlat15;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat5 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5 =
            clamp(u_xlat5, 0.0, 1.0);\n    u_xlat10 = (-u_xlat11) + 1.0;\n    u_xlat16
            = abs(u_xlat0.x) * u_xlat10 + u_xlat11;\n    u_xlat10 = u_xlat5 * u_xlat10
            + u_xlat11;\n    u_xlat10 = u_xlat10 * abs(u_xlat0.x);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = u_xlat5 * u_xlat16 + u_xlat10;\n   
            u_xlat0.x = u_xlat0.x + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat15 * u_xlat0.x;\n    u_xlat0.x = u_xlat5 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz
            = u_xlat16_2.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_4.x = dot(u_xlat16_8.xyz, u_xlat16_8.xyz);\n   
            u_xlatb10 = u_xlat16_4.x!=0.0;\n    u_xlat10 = u_xlatb10 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat10 * u_xlat0.x;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat1.x) + 1.0;\n    u_xlat16_9.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_9.xyz = (-u_xlat16_8.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_9.xyz * u_xlat16_4.xxx
            + u_xlat16_8.xyz;\n    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_8.xyz;\n   
            u_xlat16_8.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_8.x = u_xlat16_8.x
            * u_xlat16_8.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8.x;\n   
            u_xlat16_8.x = u_xlat1.x + u_xlat1.x;\n    u_xlat16_8.x = u_xlat1.x *
            u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat6 + -0.5;\n   
            u_xlat16_3.x = u_xlat16_8.x * u_xlat16_3.x + 1.0;\n    u_xlat16_13 =
            (-u_xlat5) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8.x;\n    u_xlat5 = u_xlat5 *
            u_xlat16_3.x;\n    u_xlat16_3.xyz = vec3(u_xlat5) * _LightColor0.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz
            = u_xlat2.xyz * vec3(u_xlat16_18);\n    u_xlat0.xyz = u_xlat16_4.xyz
            * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Screw
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
    ShaderPath: Assets/Assets/Material/Screw.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 81c6ba5e42a90ad43a2ecfbd753e3def, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _alpha;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin highp  vec3 vs_TEXCOORD1;\nin
            highp  vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nvec3
            u_xlat3;\nmediump vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump float
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nmediump float u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat
            u_xlat15;\nfloat u_xlat16;\nvec3 u_xlat24;\nmediump vec3 u_xlat16_24;\nmediump
            vec3 u_xlat16_28;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat45;\nfloat
            u_xlat46;\nfloat u_xlat47;\nbool u_xlatb47;\nmediump float u_xlat16_49;\nmediump
            float u_xlat16_56;\nmediump float u_xlat16_57;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat45 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xyz
            = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat3.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat46 = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot((-u_xlat1.xyz),
            vs_TEXCOORD1.xyz);\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n   
            u_xlat16_4.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_4.xxx) + (-u_xlat1.xyz);\n   
            u_xlatb47 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb47){\n       
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n        u_xlat47 = inversesqrt(u_xlat47);\n       
            u_xlat5.xyz = vec3(u_xlat47) * u_xlat16_4.xyz;\n        u_xlat6.xyz =
            (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz
            = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat47 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat47 =
            min(u_xlat6.z, u_xlat47);\n        u_xlat6.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat47) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_49 = (-u_xlat46)
            * 0.699999988 + 1.70000005;\n    u_xlat16_49 = u_xlat46 * u_xlat16_49;\n   
            u_xlat16_49 = u_xlat16_49 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_49);\n    u_xlat16_9 = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9 = unity_SpecCube0_HDR.w * u_xlat16_9 + 1.0;\n    u_xlat16_9
            = log2(u_xlat16_9);\n    u_xlat16_9 = u_xlat16_9 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_9 = exp2(u_xlat16_9);\n    u_xlat16_9 = u_xlat16_9 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_24.xyz = u_xlat16_5.xyz * vec3(u_xlat16_9);\n    u_xlatb47 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb47){\n        u_xlatb47
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb47){\n           
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat47
            = inversesqrt(u_xlat47);\n            u_xlat6.xyz = vec3(u_xlat47) *
            u_xlat16_4.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat47 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat47
            = min(u_xlat7.z, u_xlat47);\n            u_xlat7.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat47) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_49);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = log2(u_xlat16_11.x);\n        u_xlat16_11.x = u_xlat16_11.x
            * unity_SpecCube1_HDR.y;\n        u_xlat16_11.x = exp2(u_xlat16_11.x);\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = vec3(u_xlat16_9)
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat24.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_24.xyz = u_xlat24.xyz;\n   
            }\n    u_xlat47 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat47
            = inversesqrt(u_xlat47);\n    u_xlat5.xyz = vec3(u_xlat47) * vs_TEXCOORD1.xyz;\n   
            u_xlat16_11.xyz = u_xlat16_2.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n   
            u_xlat16_9 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_12.xyz
            = u_xlat3.xyz * vec3(u_xlat16_9);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat45 = dot(u_xlat5.xyz,
            u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat16 = dot(u_xlat5.xyz,
            u_xlat0.xyz);\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_56 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_56
            = u_xlat0.x * u_xlat16_56;\n    u_xlat16_56 = u_xlat16_56 * u_xlat46
            + -0.5;\n    u_xlat16_57 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_57
            * u_xlat16_57;\n    u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_13;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_57
            + 1.0;\n    u_xlat16_13 = -abs(u_xlat45) + 1.0;\n    u_xlat16_28.x =
            u_xlat16_13 * u_xlat16_13;\n    u_xlat16_28.x = u_xlat16_28.x * u_xlat16_28.x;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_28.x;\n    u_xlat16_56 = u_xlat16_56
            * u_xlat16_13 + 1.0;\n    u_xlat16_56 = u_xlat16_56 * u_xlat16_57;\n   
            u_xlat15 = u_xlat1.x * u_xlat16_56;\n    u_xlat30 = u_xlat46 * u_xlat46;\n   
            u_xlat30 = max(u_xlat30, 0.00200000009);\n    u_xlat31 = (-u_xlat30)
            + 1.0;\n    u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat30;\n    u_xlat31
            = u_xlat1.x * u_xlat31 + u_xlat30;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat1.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat30
            * u_xlat30;\n    u_xlat46 = u_xlat16 * u_xlat31 + (-u_xlat16);\n    u_xlat16
            = u_xlat46 * u_xlat16 + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat16 = u_xlat16 * u_xlat16 + 1.00000001e-07;\n    u_xlat16 = u_xlat31
            / u_xlat16;\n    u_xlat45 = u_xlat45 * u_xlat16;\n    u_xlat45 = u_xlat1.x
            * u_xlat45;\n    u_xlat45 = u_xlat45 * 3.14159274;\n    u_xlat45 = max(u_xlat45,
            0.0);\n    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;\n    u_xlat30 = float(1.0)
            / u_xlat30;\n    u_xlat16_56 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb1 = u_xlat16_56!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat1.x;\n    u_xlat16_9 = (-u_xlat16_9) + _Glossiness;\n   
            u_xlat16_9 = u_xlat16_9 + 1.0;\n    u_xlat16_9 = clamp(u_xlat16_9, 0.0,
            1.0);\n    u_xlat16_28.xyz = vec3(u_xlat15) * _LightColor0.xyz;\n   
            u_xlat1.xyz = vec3(u_xlat45) * _LightColor0.xyz;\n    u_xlat16_56 = (-u_xlat0.x)
            + 1.0;\n    u_xlat16_57 = u_xlat16_56 * u_xlat16_56;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_57;\n    u_xlat16_56 = u_xlat16_56 * u_xlat16_57;\n   
            u_xlat16_14.xyz = (-u_xlat16_11.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_14.xyz
            = u_xlat16_14.xyz * vec3(u_xlat16_56) + u_xlat16_11.xyz;\n    u_xlat0.xyw
            = u_xlat1.xyz * u_xlat16_14.xyz;\n    u_xlat0.xyw = u_xlat16_12.xyz *
            u_xlat16_28.xyz + u_xlat0.xyw;\n    u_xlat16_24.xyz = u_xlat16_24.xyz
            * vec3(u_xlat30);\n    u_xlat16_12.xyz = (-u_xlat16_11.xyz) + vec3(u_xlat16_9);\n   
            u_xlat16_11.xyz = vec3(u_xlat16_13) * u_xlat16_12.xyz + u_xlat16_11.xyz;\n   
            u_xlat0.xyz = u_xlat16_24.xyz * u_xlat16_11.xyz + u_xlat0.xyw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = _alpha;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD3.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD6
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Glossiness;\nuniform
            \tmediump float _Metallic;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _alpha;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform
            mediump samplerCube unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nin highp  vec3 vs_TEXCOORD2;\nin mediump 
            vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nvec3
            u_xlat3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3
            u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3 u_xlatb11;\nmediump
            vec3 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat
            u_xlat15;\nfloat u_xlat16;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat45;\nfloat
            u_xlat46;\nfloat u_xlat47;\nbool u_xlatb47;\nmediump float u_xlat16_49;\nmediump
            float u_xlat16_51;\nmediump float u_xlat16_55;\nmediump float u_xlat16_57;\nmediump
            float u_xlat16_58;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat45 = inversesqrt(u_xlat45);\n    u_xlat1.xyz = vec3(u_xlat45) *
            u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat3.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat46 = (-_Glossiness)
            + 1.0;\n    u_xlat16_4.x = dot((-u_xlat1.xyz), vs_TEXCOORD1.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = vs_TEXCOORD1.xyz
            * (-u_xlat16_4.xxx) + (-u_xlat1.xyz);\n    u_xlat5.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat5.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat5);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat5);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat5);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD3.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb47 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb47){\n        u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat47 = inversesqrt(u_xlat47);\n        u_xlat5.xyz = vec3(u_xlat47)
            * u_xlat16_4.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat5.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat47 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat47 =
            min(u_xlat7.z, u_xlat47);\n        u_xlat7.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat47) + u_xlat7.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_49 = (-u_xlat46)
            * 0.699999988 + 1.70000005;\n    u_xlat16_49 = u_xlat46 * u_xlat16_49;\n   
            u_xlat16_49 = u_xlat16_49 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_49);\n    u_xlat16_51 = u_xlat16_5.w + -1.0;\n   
            u_xlat16_51 = unity_SpecCube0_HDR.w * u_xlat16_51 + 1.0;\n    u_xlat16_51
            = log2(u_xlat16_51);\n    u_xlat16_51 = u_xlat16_51 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_51 = exp2(u_xlat16_51);\n    u_xlat16_51 = u_xlat16_51 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat16_5.xyz * vec3(u_xlat16_51);\n    u_xlatb47
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb47){\n       
            u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb47){\n           
            u_xlat47 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat47
            = inversesqrt(u_xlat47);\n            u_xlat7.xyz = vec3(u_xlat47) *
            u_xlat16_4.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat47 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat47
            = min(u_xlat8.z, u_xlat47);\n            u_xlat8.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat47) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_49);\n        u_xlat16_55 = u_xlat16_4.w + -1.0;\n       
            u_xlat16_55 = unity_SpecCube1_HDR.w * u_xlat16_55 + 1.0;\n        u_xlat16_55
            = log2(u_xlat16_55);\n        u_xlat16_55 = u_xlat16_55 * unity_SpecCube1_HDR.y;\n       
            u_xlat16_55 = exp2(u_xlat16_55);\n        u_xlat16_55 = u_xlat16_55 *
            unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat16_4.xyz * vec3(u_xlat16_55);\n       
            u_xlat5.xyz = vec3(u_xlat16_51) * u_xlat16_5.xyz + (-u_xlat16_12.xyz);\n       
            u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_12.xyz;\n       
            u_xlat16_10.xyz = u_xlat10.xyz;\n    }\n    u_xlat47 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat47 = inversesqrt(u_xlat47);\n    u_xlat5.xyz
            = vec3(u_xlat47) * vs_TEXCOORD1.xyz;\n    u_xlat16_12.xyz = u_xlat16_2.xyz
            * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat16_12.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_12.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_51 =
            (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_13.xyz = u_xlat3.xyz
            * vec3(u_xlat16_51);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat45 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat45 = max(u_xlat45, 0.00100000005);\n    u_xlat45 = inversesqrt(u_xlat45);\n   
            u_xlat0.xyz = vec3(u_xlat45) * u_xlat0.xyz;\n    u_xlat45 = dot(u_xlat5.xyz,
            u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat16 = dot(u_xlat5.xyz,
            u_xlat0.xyz);\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_55 = u_xlat0.x + u_xlat0.x;\n    u_xlat16_55
            = u_xlat0.x * u_xlat16_55;\n    u_xlat16_55 = u_xlat16_55 * u_xlat46
            + -0.5;\n    u_xlat16_57 = (-u_xlat1.x) + 1.0;\n    u_xlat16_58 = u_xlat16_57
            * u_xlat16_57;\n    u_xlat16_58 = u_xlat16_58 * u_xlat16_58;\n    u_xlat16_57
            = u_xlat16_57 * u_xlat16_58;\n    u_xlat16_57 = u_xlat16_55 * u_xlat16_57
            + 1.0;\n    u_xlat16_58 = -abs(u_xlat45) + 1.0;\n    u_xlat16_14.x =
            u_xlat16_58 * u_xlat16_58;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_58 = u_xlat16_58 * u_xlat16_14.x;\n    u_xlat16_55 = u_xlat16_55
            * u_xlat16_58 + 1.0;\n    u_xlat16_55 = u_xlat16_55 * u_xlat16_57;\n   
            u_xlat15 = u_xlat1.x * u_xlat16_55;\n    u_xlat30 = u_xlat46 * u_xlat46;\n   
            u_xlat30 = max(u_xlat30, 0.00200000009);\n    u_xlat31 = (-u_xlat30)
            + 1.0;\n    u_xlat46 = abs(u_xlat45) * u_xlat31 + u_xlat30;\n    u_xlat31
            = u_xlat1.x * u_xlat31 + u_xlat30;\n    u_xlat45 = abs(u_xlat45) * u_xlat31;\n   
            u_xlat45 = u_xlat1.x * u_xlat46 + u_xlat45;\n    u_xlat45 = u_xlat45
            + 9.99999975e-06;\n    u_xlat45 = 0.5 / u_xlat45;\n    u_xlat31 = u_xlat30
            * u_xlat30;\n    u_xlat46 = u_xlat16 * u_xlat31 + (-u_xlat16);\n    u_xlat16
            = u_xlat46 * u_xlat16 + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n   
            u_xlat16 = u_xlat16 * u_xlat16 + 1.00000001e-07;\n    u_xlat16 = u_xlat31
            / u_xlat16;\n    u_xlat45 = u_xlat45 * u_xlat16;\n    u_xlat45 = u_xlat1.x
            * u_xlat45;\n    u_xlat45 = u_xlat45 * 3.14159274;\n    u_xlat45 = max(u_xlat45,
            0.0);\n    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;\n    u_xlat30 = float(1.0)
            / u_xlat30;\n    u_xlat16_55 = dot(u_xlat16_12.xyz, u_xlat16_12.xyz);\n   
            u_xlatb1 = u_xlat16_55!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat45 = u_xlat45 * u_xlat1.x;\n    u_xlat16_51 = (-u_xlat16_51) +
            _Glossiness;\n    u_xlat16_51 = u_xlat16_51 + 1.0;\n    u_xlat16_51 =
            clamp(u_xlat16_51, 0.0, 1.0);\n    u_xlat16_6.xyz = _LightColor0.xyz
            * vec3(u_xlat15) + u_xlat16_6.xyz;\n    u_xlat1.xyz = vec3(u_xlat45)
            * _LightColor0.xyz;\n    u_xlat16_55 = (-u_xlat0.x) + 1.0;\n    u_xlat16_57
            = u_xlat16_55 * u_xlat16_55;\n    u_xlat16_57 = u_xlat16_57 * u_xlat16_57;\n   
            u_xlat16_55 = u_xlat16_55 * u_xlat16_57;\n    u_xlat16_14.xyz = (-u_xlat16_12.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_14.xyz = u_xlat16_14.xyz * vec3(u_xlat16_55)
            + u_xlat16_12.xyz;\n    u_xlat0.xyw = u_xlat1.xyz * u_xlat16_14.xyz;\n   
            u_xlat0.xyw = u_xlat16_13.xyz * u_xlat16_6.xyz + u_xlat0.xyw;\n    u_xlat16_6.xyz
            = u_xlat16_10.xyz * vec3(u_xlat30);\n    u_xlat16_10.xyz = (-u_xlat16_12.xyz)
            + vec3(u_xlat16_51);\n    u_xlat16_10.xyz = vec3(u_xlat16_58) * u_xlat16_10.xyz
            + u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_10.xyz
            + u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            _alpha;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        KeywordsMinimalCardinality: 19
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Transparent
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: Custom/Transparent
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Glossiness;\nuniform \tmediump float _Metallic;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _alpha;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nin highp  vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nfloat u_xlat5;\nfloat u_xlat6;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nbool u_xlatb10;\nfloat u_xlat11;\nmediump
            float u_xlat16_13;\nfloat u_xlat15;\nfloat u_xlat16;\nfloat u_xlat17;\nmediump
            float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat15)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n   
            u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat15 = max(u_xlat15,
            0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat1.xyz
            = vec3(u_xlat15) * u_xlat1.xyz;\n    u_xlat15 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz
            = vec3(u_xlat15) * vs_TEXCOORD1.xyz;\n    u_xlat15 = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat1.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat6 = (-_Glossiness) + 1.0;\n    u_xlat11 = u_xlat6
            * u_xlat6;\n    u_xlat11 = max(u_xlat11, 0.00200000009);\n    u_xlat16
            = u_xlat11 * u_xlat11;\n    u_xlat17 = u_xlat15 * u_xlat16 + (-u_xlat15);\n   
            u_xlat15 = u_xlat17 * u_xlat15 + 1.0;\n    u_xlat15 = u_xlat15 * u_xlat15
            + 1.00000001e-07;\n    u_xlat16 = u_xlat16 * 0.318309873;\n    u_xlat15
            = u_xlat16 / u_xlat15;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat5 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5 =
            clamp(u_xlat5, 0.0, 1.0);\n    u_xlat10 = (-u_xlat11) + 1.0;\n    u_xlat16
            = abs(u_xlat0.x) * u_xlat10 + u_xlat11;\n    u_xlat10 = u_xlat5 * u_xlat10
            + u_xlat11;\n    u_xlat10 = u_xlat10 * abs(u_xlat0.x);\n    u_xlat16_3.x
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat0.x = u_xlat5 * u_xlat16 + u_xlat10;\n   
            u_xlat0.x = u_xlat0.x + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat15 * u_xlat0.x;\n    u_xlat0.x = u_xlat5 * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz
            = u_xlat16_2.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_4.x = dot(u_xlat16_8.xyz, u_xlat16_8.xyz);\n   
            u_xlatb10 = u_xlat16_4.x!=0.0;\n    u_xlat10 = u_xlatb10 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat10 * u_xlat0.x;\n    u_xlat0.xzw = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat1.x) + 1.0;\n    u_xlat16_9.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_9.x;\n    u_xlat16_9.xyz = (-u_xlat16_8.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_9.xyz * u_xlat16_4.xxx
            + u_xlat16_8.xyz;\n    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_8.xyz;\n   
            u_xlat16_8.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_8.x = u_xlat16_8.x
            * u_xlat16_8.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8.x;\n   
            u_xlat16_8.x = u_xlat1.x + u_xlat1.x;\n    u_xlat16_8.x = u_xlat1.x *
            u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat6 + -0.5;\n   
            u_xlat16_3.x = u_xlat16_8.x * u_xlat16_3.x + 1.0;\n    u_xlat16_13 =
            (-u_xlat5) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8.x;\n    u_xlat5 = u_xlat5 *
            u_xlat16_3.x;\n    u_xlat16_3.xyz = vec3(u_xlat5) * _LightColor0.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz
            = u_xlat2.xyz * vec3(u_xlat16_18);\n    u_xlat0.xyz = u_xlat16_4.xyz
            * u_xlat16_3.xyz + u_xlat0.xzw;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = _alpha;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: Custom/Transparent
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      Tags:
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
    ShaderPath: Assets/Assets/Material/Transparent.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: 634f8f9e486749f49bab6c24228e1a82, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            highp sampler2D _MainTex;\nin highp  vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvoid main()\n{\n   
            u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Hidden/BlitCopy
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nin mediump  vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors:
        - Variant: 1
          ShaderName: Legacy Shaders/Diffuse
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: Legacy Shaders/Diffuse
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: Legacy Shaders/Diffuse
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump  vec4 vs_COLOR0;\nin mediump  vec3 vs_COLOR1;\nin highp  vec2
            vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz
            * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0,
            2.0) + vs_COLOR1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - POINT
          - SPOT
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Legacy Shaders/VertexLit
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin
            highp vec3 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec2 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_6;\nvoid
            main()\n{\n    u_xlat16_0 = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n   
            u_xlat16_6 = log2(u_xlat16_0.w);\n    u_xlat16_6 = u_xlat16_6 * unity_Lightmap_HDR.y;\n   
            u_xlat16_6 = exp2(u_xlat16_6);\n    u_xlat16_6 = u_xlat16_6 * unity_Lightmap_HDR.x;\n   
            u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_6);\n    u_xlat16_0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors:
        - Variant: 1
          ShaderName: Legacy Shaders/VertexLit
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords: []
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform
            mediump samplerCube unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin
            highp  vec3 vs_TEXCOORD1;\nin highp  vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nbvec3 u_xlatb7;\nvec3 u_xlat8;\nmediump vec3 u_xlat16_8;\nbvec3
            u_xlatb9;\nmediump float u_xlat16_10;\nvec3 u_xlat11;\nmediump vec3 u_xlat16_21;\nfloat
            u_xlat22;\nfloat u_xlat33;\nfloat u_xlat34;\nbool u_xlatb34;\nmediump
            float u_xlat16_36;\nmediump float u_xlat16_41;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat33 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat1.xyz
            = vec3(u_xlat33) * u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_3.x = dot((-u_xlat1.xyz), vs_TEXCOORD1.xyz);\n    u_xlat16_3.x
            = u_xlat16_3.x + u_xlat16_3.x;\n    u_xlat16_3.xyz = vs_TEXCOORD1.xyz
            * (-u_xlat16_3.xxx) + (-u_xlat1.xyz);\n    u_xlatb34 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb34){\n        u_xlat34 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n       
            u_xlat34 = inversesqrt(u_xlat34);\n        u_xlat4.xyz = vec3(u_xlat34)
            * u_xlat16_3.xyz;\n        u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat5;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat5.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat5.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat5.z : u_xlat6.z;\n            u_xlat5 = hlslcc_movcTemp;\n       
            }\n        u_xlat34 = min(u_xlat5.y, u_xlat5.x);\n        u_xlat34 =
            min(u_xlat5.z, u_xlat34);\n        u_xlat5.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat34) + u_xlat5.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_3.xyz;\n    }\n    u_xlat16_4 = textureLod(unity_SpecCube0,
            u_xlat4.xyz, 6.0);\n    u_xlat16_36 = u_xlat16_4.w + -1.0;\n    u_xlat16_36
            = unity_SpecCube0_HDR.w * u_xlat16_36 + 1.0;\n    u_xlat16_36 = log2(u_xlat16_36);\n   
            u_xlat16_36 = u_xlat16_36 * unity_SpecCube0_HDR.y;\n    u_xlat16_36 =
            exp2(u_xlat16_36);\n    u_xlat16_36 = u_xlat16_36 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_8.xyz = u_xlat16_4.xyz * vec3(u_xlat16_36);\n    u_xlatb34 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb34){\n        u_xlatb34
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb34){\n           
            u_xlat34 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n            u_xlat34
            = inversesqrt(u_xlat34);\n            u_xlat5.xyz = vec3(u_xlat34) *
            u_xlat16_3.xyz;\n            u_xlat6.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb9.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb9.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb9.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat34 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat34
            = min(u_xlat6.z, u_xlat34);\n            u_xlat6.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat34) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_3.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat5.xyz, 6.0);\n        u_xlat16_3.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_3.x = unity_SpecCube1_HDR.w * u_xlat16_3.x + 1.0;\n        u_xlat16_3.x
            = log2(u_xlat16_3.x);\n        u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube1_HDR.y;\n       
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n        u_xlat16_3.x = u_xlat16_3.x
            * unity_SpecCube1_HDR.x;\n        u_xlat16_3.xyz = u_xlat16_5.xyz * u_xlat16_3.xxx;\n       
            u_xlat4.xyz = vec3(u_xlat16_36) * u_xlat16_4.xyz + (-u_xlat16_3.xyz);\n       
            u_xlat8.xyz = unity_SpecCube0_BoxMin.www * u_xlat4.xyz + u_xlat16_3.xyz;\n       
            u_xlat16_8.xyz = u_xlat8.xyz;\n    }\n    u_xlat34 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat34 = inversesqrt(u_xlat34);\n    u_xlat4.xyz
            = vec3(u_xlat34) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat2.xyz
            * vec3(0.959999979, 0.959999979, 0.959999979);\n    u_xlat0.xyz = u_xlat0.xyz
            * vec3(u_xlat33) + _WorldSpaceLightPos0.xyz;\n    u_xlat33 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat33 = max(u_xlat33, 0.00100000005);\n    u_xlat33
            = inversesqrt(u_xlat33);\n    u_xlat0.xyz = vec3(u_xlat33) * u_xlat0.xyz;\n   
            u_xlat33 = dot(u_xlat4.xyz, u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat4.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_36 = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat0.x + -0.5;\n    u_xlat16_41 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_10 = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_10
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_10;\n   
            u_xlat16_41 = u_xlat16_36 * u_xlat16_41 + 1.0;\n    u_xlat16_10 = -abs(u_xlat33)
            + 1.0;\n    u_xlat16_21.x = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_21.x
            = u_xlat16_21.x * u_xlat16_21.x;\n    u_xlat16_10 = u_xlat16_10 * u_xlat16_21.x;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat16_10 + 1.0;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_41;\n    u_xlat11.x = u_xlat1.x * u_xlat16_36;\n    u_xlat22
            = abs(u_xlat33) + u_xlat1.x;\n    u_xlat22 = u_xlat22 + 9.99999975e-06;\n   
            u_xlat22 = 0.5 / u_xlat22;\n    u_xlat22 = u_xlat1.x * u_xlat22;\n   
            u_xlat22 = u_xlat22 * 0.999999881;\n    u_xlat16_21.xyz = u_xlat11.xxx
            * _LightColor0.xyz;\n    u_xlat11.xyz = vec3(u_xlat22) * _LightColor0.xyz;\n   
            u_xlat16_36 = (-u_xlat0.x) + 1.0;\n    u_xlat16_41 = u_xlat16_36 * u_xlat16_36;\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_41;\n    u_xlat16_36 = u_xlat16_36 * 0.959999979 + 0.0399999991;\n   
            u_xlat0.xyz = u_xlat11.xyz * vec3(u_xlat16_36);\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_21.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_8.xyz
            * vec3(0.5, 0.5, 0.5);\n    u_xlat16_36 = u_xlat16_10 * 2.23517418e-08
            + 0.0399999991;\n    u_xlat0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_36)
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x
            + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD3.xyz
            = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube1;\nin highp  vec2 vs_TEXCOORD0;\nin highp  vec3 vs_TEXCOORD1;\nin
            highp  vec3 vs_TEXCOORD2;\nin mediump  vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump
            vec4 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec4
            u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump float u_xlat16_11;\nvec3
            u_xlat12;\nfloat u_xlat24;\nfloat u_xlat36;\nfloat u_xlat37;\nbool u_xlatb37;\nmediump
            float u_xlat16_39;\nmediump float u_xlat16_41;\nmediump float u_xlat16_45;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n   
            u_xlat1.xyz = vec3(u_xlat36) * u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_3.x = dot((-u_xlat1.xyz), vs_TEXCOORD1.xyz);\n    u_xlat16_3.x
            = u_xlat16_3.x + u_xlat16_3.x;\n    u_xlat16_3.xyz = vs_TEXCOORD1.xyz
            * (-u_xlat16_3.xxx) + (-u_xlat1.xyz);\n    u_xlat4.xyz = vs_TEXCOORD1.xyz;\n   
            u_xlat4.w = 1.0;\n    u_xlat16_5.x = dot(unity_SHAr, u_xlat4);\n    u_xlat16_5.y
            = dot(unity_SHAg, u_xlat4);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat4);\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz + vs_TEXCOORD3.xyz;\n    u_xlat16_5.xyz
            = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb37 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb37){\n        u_xlat37 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n       
            u_xlat37 = inversesqrt(u_xlat37);\n        u_xlat4.xyz = vec3(u_xlat37)
            * u_xlat16_3.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat4.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat37 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat37 =
            min(u_xlat6.z, u_xlat37);\n        u_xlat6.xyz = vs_TEXCOORD2.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat37) + u_xlat6.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_3.xyz;\n    }\n    u_xlat16_4 = textureLod(unity_SpecCube0,
            u_xlat4.xyz, 6.0);\n    u_xlat16_39 = u_xlat16_4.w + -1.0;\n    u_xlat16_39
            = unity_SpecCube0_HDR.w * u_xlat16_39 + 1.0;\n    u_xlat16_39 = log2(u_xlat16_39);\n   
            u_xlat16_39 = u_xlat16_39 * unity_SpecCube0_HDR.y;\n    u_xlat16_39 =
            exp2(u_xlat16_39);\n    u_xlat16_39 = u_xlat16_39 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_9.xyz = u_xlat16_4.xyz * vec3(u_xlat16_39);\n    u_xlatb37 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb37){\n        u_xlatb37
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb37){\n           
            u_xlat37 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n            u_xlat37
            = inversesqrt(u_xlat37);\n            u_xlat6.xyz = vec3(u_xlat37) *
            u_xlat16_3.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD2.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat37 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat37
            = min(u_xlat7.z, u_xlat37);\n            u_xlat7.xyz = vs_TEXCOORD2.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat37) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_3.xyz;\n        }\n        u_xlat16_6 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, 6.0);\n        u_xlat16_3.x = u_xlat16_6.w + -1.0;\n       
            u_xlat16_3.x = unity_SpecCube1_HDR.w * u_xlat16_3.x + 1.0;\n        u_xlat16_3.x
            = log2(u_xlat16_3.x);\n        u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube1_HDR.y;\n       
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n        u_xlat16_3.x = u_xlat16_3.x
            * unity_SpecCube1_HDR.x;\n        u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_3.xxx;\n       
            u_xlat4.xyz = vec3(u_xlat16_39) * u_xlat16_4.xyz + (-u_xlat16_3.xyz);\n       
            u_xlat9.xyz = unity_SpecCube0_BoxMin.www * u_xlat4.xyz + u_xlat16_3.xyz;\n       
            u_xlat16_9.xyz = u_xlat9.xyz;\n    }\n    u_xlat37 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat4.xyz
            = vec3(u_xlat37) * vs_TEXCOORD1.xyz;\n    u_xlat16_3.xyz = u_xlat2.xyz
            * vec3(0.959999979, 0.959999979, 0.959999979);\n    u_xlat0.xyz = u_xlat0.xyz
            * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;\n    u_xlat36 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat36 = max(u_xlat36, 0.00100000005);\n    u_xlat36
            = inversesqrt(u_xlat36);\n    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;\n   
            u_xlat36 = dot(u_xlat4.xyz, u_xlat1.xyz);\n    u_xlat1.x = dot(u_xlat4.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_39 = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat0.x + -0.5;\n    u_xlat16_41 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_45 = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_45
            = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_45;\n   
            u_xlat16_41 = u_xlat16_39 * u_xlat16_41 + 1.0;\n    u_xlat16_45 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_11 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_11
            = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_45 = u_xlat16_45 * u_xlat16_11;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_45 + 1.0;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_41;\n    u_xlat12.x = u_xlat1.x * u_xlat16_39;\n    u_xlat24
            = abs(u_xlat36) + u_xlat1.x;\n    u_xlat24 = u_xlat24 + 9.99999975e-06;\n   
            u_xlat24 = 0.5 / u_xlat24;\n    u_xlat24 = u_xlat1.x * u_xlat24;\n   
            u_xlat24 = u_xlat24 * 0.999999881;\n    u_xlat16_5.xyz = _LightColor0.xyz
            * u_xlat12.xxx + u_xlat16_5.xyz;\n    u_xlat12.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_39 = (-u_xlat0.x) + 1.0;\n    u_xlat16_41
            = u_xlat16_39 * u_xlat16_39;\n    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_41;\n    u_xlat16_39 = u_xlat16_39
            * 0.959999979 + 0.0399999991;\n    u_xlat0.xyz = u_xlat12.xyz * vec3(u_xlat16_39);\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_9.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_39 = u_xlat16_45
            * 2.23517418e-08 + 0.0399999991;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            vec3(u_xlat16_39) + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        CompilationErrors:
        - Variant: 1
          ShaderName: MK/Toon/URP/Standard/Physically Based
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: MK/Toon/URP/Standard/Physically Based
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp  vec2 vs_TEXCOORD0;\nin highp  vec3 vs_TEXCOORD1;\nin highp  vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec4 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float
            u_xlat16_8;\nmediump float u_xlat16_13;\nfloat u_xlat15;\nfloat u_xlat16;\nmediump
            float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat15 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_3.x = -abs(u_xlat15) + 1.0;\n    u_xlat5.x = abs(u_xlat15) +
            u_xlat0.x;\n    u_xlat5.x = u_xlat5.x + 9.99999975e-06;\n    u_xlat5.x
            = 0.5 / u_xlat5.x;\n    u_xlat5.x = u_xlat0.x * u_xlat5.x;\n    u_xlat5.x
            = u_xlat5.x * 0.999999881;\n    u_xlat5.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_8 = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_8 = u_xlat16_8
            * u_xlat16_8;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8;\n    u_xlat16
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = max(u_xlat16, 0.00100000005);\n   
            u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) *
            u_xlat1.xyz;\n    u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat16_8 = u_xlat1.x +
            u_xlat1.x;\n    u_xlat16_8 = u_xlat16_8 * u_xlat1.x + -0.5;\n    u_xlat16_13
            = (-u_xlat1.x) + 1.0;\n    u_xlat16_3.x = u_xlat16_8 * u_xlat16_3.x +
            1.0;\n    u_xlat16_18 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_4.x;\n    u_xlat16_8 = u_xlat16_8
            * u_xlat16_18 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_8;\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_3.x;\n    u_xlat16_3.xyw = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_4.x = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_4.x;\n    u_xlat16_13 = u_xlat16_13 * 0.959999979 + 0.0399999991;\n   
            u_xlat0.xyz = u_xlat5.xyz * vec3(u_xlat16_13);\n    u_xlat16_1.xyz =
            texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(0.959999979, 0.959999979,
            0.959999979);\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyw + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: MK/Toon/URP/Standard/Physically Based
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
    ShaderPath: Assets/Assets/Shader/MK_Toon_URP_Standard_Physically Based.shader
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4800000, guid: fcad3a08b9165da48a3bb0278a0932ff, type: 3}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout
            mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump
            vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat
            u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y,
            _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468,
            0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n   
            u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5,
            0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0,
            1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997,
            0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n   
            u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y
            * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y)
            * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8
            * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n       
            u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n       
            u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 =
            (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28
            * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n       
            u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24
            * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz =
            u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz =
            u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n       
            u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x
            = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n       
            u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28
            * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x
            * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz *
            u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26)
            * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz),
            u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n       
            u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 =
            u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28
            * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x
            = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n       
            u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x
            = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x
            * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n       
            u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) *
            vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n       
            u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz =
            u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 +
            (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28
            = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw
            = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw
            * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n       
            u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz *
            vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx +
            vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz
            = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz
            * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx
            * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\nin mediump  float vs_TEXCOORD0;\nin mediump  vec3 vs_TEXCOORD1;\nin
            mediump  vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz
            = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0)
            * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout mediump vec3 vs_TEXCOORD0;\nout mediump
            vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3
            vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec2 u_xlat14;\nfloat
            u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y,
            _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468,
            0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n   
            u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5,
            0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0,
            1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997,
            0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n   
            u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y
            * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y)
            * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8
            * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n       
            u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n       
            u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 =
            (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28
            * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n       
            u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24
            * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz =
            u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz =
            u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n       
            u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x
            = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n       
            u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28
            * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x
            * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz *
            u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26)
            * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz),
            u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n       
            u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 =
            u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28
            * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x
            = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n       
            u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x
            = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x
            * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n       
            u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) *
            vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n       
            u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz =
            u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 +
            (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28
            = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw
            = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw
            * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n       
            u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz *
            vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx +
            vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz
            = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n   
            vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x
            = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x =
            u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75
            + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz,
            _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x
            = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n   
            u_xlat16_11.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_11.xyz = clamp(u_xlat16_11.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz
            = u_xlat16_11.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz
            * vec3(27.0, 27.0, 27.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n   
            vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nin mediump  vec3 vs_TEXCOORD0;\nin mediump 
            vec3 vs_TEXCOORD1;\nin mediump  vec3 vs_TEXCOORD2;\nin mediump  vec3
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3
            u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz = vs_TEXCOORD0.xyz +
            _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n   
            u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x = float(1.0) / _SunSize;\n   
            u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x,
            0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x
            = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) *
            u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n   
            u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n   
            u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2))
            ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout highp vec3 vs_TEXCOORD0;\nout mediump vec3
            vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3 u_xlat7;\nfloat
            u_xlat8;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat14;\nfloat u_xlat16;\nfloat
            u_xlat22;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y,
            _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468,
            0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n   
            u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5,
            0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0,
            1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997,
            0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n   
            u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y
            * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y)
            * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8
            * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n       
            u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n       
            u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 =
            (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28
            * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n       
            u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24
            * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz =
            u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz =
            u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n       
            u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x
            = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n       
            u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28
            * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x
            * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz *
            u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat28 = min(u_xlat4.y, -0.00100000005);\n       
            u_xlat28 = -9.99999975e-05 / u_xlat28;\n        u_xlat6.xyz = vec3(u_xlat28)
            * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat6.w = dot((-u_xlat4.xyz),
            u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n       
            u_xlat6.xy = (-u_xlat6.xw) + vec2(1.0, 1.0);\n        u_xlat22 = u_xlat6.y
            * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.y * u_xlat22 + 3.82999992;\n       
            u_xlat22 = u_xlat6.y * u_xlat22 + 0.458999991;\n        u_xlat14.x =
            u_xlat6.y * u_xlat22 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat6.y = exp2(u_xlat14.x);\n        u_xlat22
            = u_xlat6.x * 5.25 + -6.80000019;\n        u_xlat22 = u_xlat6.x * u_xlat22
            + 3.82999992;\n        u_xlat22 = u_xlat6.x * u_xlat22 + 0.458999991;\n       
            u_xlat6.x = u_xlat6.x * u_xlat22 + -0.00286999997;\n        u_xlat6.xyz
            = u_xlat6.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat6.x
            = exp2(u_xlat6.x);\n        u_xlat6.x = u_xlat6.x * 0.25 + u_xlat6.y;\n       
            u_xlat14.xz = vec2(u_xlat28) * vec2(0.5, 20.0);\n        u_xlat7.xyz
            = u_xlat4.xyz * u_xlat14.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n        u_xlat28 = sqrt(u_xlat28);\n        u_xlat28 =
            (-u_xlat28) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x = u_xlat28 * u_xlat6.x
            + (-u_xlat6.z);\n        u_xlat6.x = max(u_xlat6.x, 0.0);\n        u_xlat6.x
            = min(u_xlat6.x, 50.0);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xyz
            = (-u_xlat6.xxx) * u_xlat7.xyz;\n        u_xlat6.xyz = u_xlat6.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xyz);\n       
            u_xlat28 = u_xlat14.z * u_xlat28;\n        u_xlat6.xyz = u_xlat0.xyz
            * vec3(u_xlat28);\n        u_xlat7.xyz = u_xlat2.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz
            = u_xlat6.xyz * u_xlat7.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n   
            vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x
            = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x =
            u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75
            + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz,
            _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x
            = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n   
            u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz,
            0.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n   
            u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(15.0, 15.0, 15.0);\n    vs_TEXCOORD3.xyz
            = u_xlat16_11.xyz / u_xlat16_3.xxx;\n    vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nin
            highp  vec3 vs_TEXCOORD0;\nin mediump  vec3 vs_TEXCOORD1;\nin mediump 
            vec3 vs_TEXCOORD2;\nin mediump  vec3 vs_TEXCOORD3;\nlayout(location =
            0) out mediump vec4 SV_Target0;\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            float u_xlat16_6;\nvoid main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n   
            u_xlat16_0.x = u_xlat16_0.x * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat1.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n   
            u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat1.xyz));\n    u_xlat16_3.x
            = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n   
            u_xlat16_3.x = u_xlat16_3.x * _SunSizeConvergence;\n    u_xlat16_3.x
            = exp2(u_xlat16_3.x);\n    u_xlat16_6 = (-u_xlat16_3.x) * 1.98000002
            + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x * u_xlat16_3.x + 1.0;\n   
            u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0, 0.0100164423);\n    u_xlat16_6
            = log2(u_xlat16_6);\n    u_xlat16_0.x = u_xlat16_6 * u_xlat16_0.x;\n   
            u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_0.x = max(u_xlat16_0.x,
            9.99999975e-05);\n    u_xlat16_0.x = u_xlat16_0.y / u_xlat16_0.x;\n   
            u_xlat16_3.x = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz
            : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout
            mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump
            vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nvec2 u_xlat14;\nfloat u_xlat16;\nfloat u_xlat24;\nfloat
            u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y,
            _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468,
            0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n   
            u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5,
            0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0,
            1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997,
            0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n   
            u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y
            * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y)
            * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8
            * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n       
            u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n       
            u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 =
            (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28
            * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n       
            u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24
            * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz =
            u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz =
            u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n       
            u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x
            = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n       
            u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28
            * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x
            * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz *
            u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26)
            * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz),
            u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n       
            u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 =
            u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28
            * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x
            = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n       
            u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x
            = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x
            * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n       
            u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) *
            vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n       
            u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz =
            u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 +
            (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28
            = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw
            = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw
            * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n       
            u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz *
            vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx +
            vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz
            = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat2.x = u_xlat4.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * u_xlat16_0.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD1.xyz = u_xlat16_3.xyz
            * vec3(_Exposure);\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat4.xyz));\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_3.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * 0.75 + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx
            * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD0 = u_xlat2.x;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\nin mediump  float vs_TEXCOORD0;\nin mediump  vec3 vs_TEXCOORD1;\nin
            mediump  vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz
            = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0)
            * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout mediump vec3 vs_TEXCOORD0;\nout mediump
            vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3
            vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nvec2 u_xlat14;\nfloat
            u_xlat16;\nfloat u_xlat24;\nfloat u_xlat26;\nfloat u_xlat28;\nfloat u_xlat29;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat16_1 = log2(vec4(_SkyTint.x, _SkyTint.y,
            _SkyTint.z, _AtmosphereThickness));\n    u_xlat16_1 = u_xlat16_1 * vec4(0.454545468,
            0.454545468, 0.454545468, 2.5);\n    u_xlat16_1 = exp2(u_xlat16_1);\n   
            u_xlat2.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5,
            0.419999987, 0.324999988);\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat2.xyz;\n    u_xlat2.xyz = vec3(1.0,
            1.0, 1.0) / u_xlat2.xyz;\n    u_xlat16_3.xy = u_xlat16_1.ww * vec2(0.049999997,
            0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat4.xyz = vec3(u_xlat24) * u_xlat0.xyz;\n   
            u_xlatb0 = u_xlat4.y>=0.0;\n    if(u_xlatb0){\n        u_xlat0.x = u_xlat4.y
            * u_xlat4.y + 0.0506249666;\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n        u_xlat8 = (-u_xlat0.y)
            * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8 * 5.25 + -6.80000019;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n        u_xlat16 = u_xlat8
            * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8 * u_xlat16 + -0.00286999997;\n       
            u_xlat8 = u_xlat8 * 1.44269502;\n        u_xlat0.y = exp2(u_xlat8);\n       
            u_xlat0.xyz = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat5.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat5.xyz = u_xlat5.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat24 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n        u_xlat24 = sqrt(u_xlat24);\n        u_xlat26 =
            (-u_xlat24) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat24;\n        u_xlat29
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat24 = u_xlat29 / u_xlat24;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat29 = u_xlat28 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat28 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat28
            * u_xlat29 + 0.458999991;\n        u_xlat28 = u_xlat28 * u_xlat29 + -0.00286999997;\n       
            u_xlat28 = u_xlat28 * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat24 = (-u_xlat24) + 1.0;\n        u_xlat29 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat29 = u_xlat24 * u_xlat29 + 3.82999992;\n        u_xlat29 = u_xlat24
            * u_xlat29 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat29 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat28 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat26 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat6.xyz =
            u_xlat2.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat7.xyz = (-vec3(u_xlat24)) * u_xlat6.xyz;\n        u_xlat7.xyz =
            u_xlat7.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat7.xyz
            = exp2(u_xlat7.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat26;\n       
            u_xlat5.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat5.xyz;\n        u_xlat0.x
            = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat26 = (-u_xlat0.x) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n        u_xlat28 = u_xlat28 / u_xlat0.x;\n        u_xlat5.x
            = dot(u_xlat4.xyz, u_xlat5.xyz);\n        u_xlat0.x = u_xlat5.x / u_xlat0.x;\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat5.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat5.x = u_xlat28 * u_xlat5.x + 3.82999992;\n       
            u_xlat5.x = u_xlat28 * u_xlat5.x + 0.458999991;\n        u_xlat28 = u_xlat28
            * u_xlat5.x + -0.00286999997;\n        u_xlat28 = u_xlat28 * 1.44269502;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat5.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat5.x = u_xlat0.x
            * u_xlat5.x + 3.82999992;\n        u_xlat5.x = u_xlat0.x * u_xlat5.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat5.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat28 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat26 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat5.xyz = u_xlat6.xyz * (-u_xlat0.xxx);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat5.xyz = exp2(u_xlat5.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat26;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n        u_xlat0.xyz = u_xlat7.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat5.xyz = u_xlat2.xyz *
            u_xlat16_3.xxx;\n        u_xlat5.xyz = u_xlat0.xyz * u_xlat5.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_5.xyz = u_xlat5.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat4.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat6.xyz = vec3(u_xlat26)
            * u_xlat4.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat28 = dot((-u_xlat4.xyz),
            u_xlat6.xyz);\n        u_xlat6.x = dot(_WorldSpaceLightPos0.xyz, u_xlat6.xyz);\n       
            u_xlat28 = (-u_xlat28) + 1.0;\n        u_xlat14.x = u_xlat28 * 5.25 +
            -6.80000019;\n        u_xlat14.x = u_xlat28 * u_xlat14.x + 3.82999992;\n       
            u_xlat14.x = u_xlat28 * u_xlat14.x + 0.458999991;\n        u_xlat28 =
            u_xlat28 * u_xlat14.x + -0.00286999997;\n        u_xlat28 = u_xlat28
            * 1.44269502;\n        u_xlat28 = exp2(u_xlat28);\n        u_xlat6.x
            = (-u_xlat6.x) + 1.0;\n        u_xlat14.x = u_xlat6.x * 5.25 + -6.80000019;\n       
            u_xlat14.x = u_xlat6.x * u_xlat14.x + 3.82999992;\n        u_xlat14.x
            = u_xlat6.x * u_xlat14.x + 0.458999991;\n        u_xlat6.x = u_xlat6.x
            * u_xlat14.x + -0.00286999997;\n        u_xlat6.x = u_xlat6.x * 1.44269502;\n       
            u_xlat6.x = exp2(u_xlat6.x);\n        u_xlat14.xy = vec2(u_xlat28) *
            vec2(0.25, 0.249900013);\n        u_xlat28 = u_xlat6.x * 0.25 + u_xlat14.x;\n       
            u_xlat6.xy = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat7.xyz =
            u_xlat4.xyz * u_xlat6.xxx;\n        u_xlat7.xyz = u_xlat7.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat28 = u_xlat26 * u_xlat28 +
            (-u_xlat14.y);\n        u_xlat28 = max(u_xlat28, 0.0);\n        u_xlat28
            = min(u_xlat28, 50.0);\n        u_xlat6.xzw = u_xlat2.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat6.xzw
            = (-vec3(u_xlat28)) * u_xlat6.xzw;\n        u_xlat6.xzw = u_xlat6.xzw
            * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat6.xzw);\n       
            u_xlat26 = u_xlat6.y * u_xlat26;\n        u_xlat6.xyz = u_xlat0.xyz *
            vec3(u_xlat26);\n        u_xlat2.xyz = u_xlat2.xyz * u_xlat16_3.xxx +
            vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat5.xyz
            = u_xlat2.xyz * u_xlat6.xyz;\n        u_xlat16_5.xyz = u_xlat5.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * u_xlat16_0.xyz + u_xlat16_5.xyz;\n   
            vs_TEXCOORD1.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x
            = dot(_WorldSpaceLightPos0.xyz, (-u_xlat4.xyz));\n    u_xlat16_3.x =
            u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_3.x = u_xlat16_3.x * 0.75
            + 0.75;\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD2.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_3.x = dot(_LightColor0.xyz,
            _LightColor0.xyz);\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat16_3.x
            = max(u_xlat16_3.x, 0.25);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n   
            u_xlat16_11.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_11.xyz = clamp(u_xlat16_11.xyz, 0.0, 1.0);\n    u_xlat16_11.xyz
            = u_xlat16_11.xyz * _LightColor0.xyz;\n    u_xlat16_11.xyz = u_xlat16_11.xyz
            * vec3(27.0, 27.0, 27.0);\n    vs_TEXCOORD3.xyz = u_xlat16_11.xyz / u_xlat16_3.xxx;\n   
            vs_TEXCOORD0.xyz = (-u_xlat4.xyz);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nin mediump  vec3 vs_TEXCOORD0;\nin mediump 
            vec3 vs_TEXCOORD1;\nin mediump  vec3 vs_TEXCOORD2;\nin mediump  vec3
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3
            u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz = vs_TEXCOORD0.xyz +
            _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n   
            u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x = float(1.0) / _SunSize;\n   
            u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x,
            0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x
            = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) *
            u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n   
            u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n   
            u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2))
            ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _SUNDISK_HIGH_QUALITY
        - _SUNDISK_NONE
        - _SUNDISK_SIMPLE
        KeywordGroups:
        - Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          - _SUNDISK_HIGH_QUALITY
        KeywordsMinimalCardinality: 1
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
        CompilationErrors:
        - Variant: 1
          ShaderName: Skybox/Procedural
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - _SUNDISK_NONE
            Messages: []
        - Variant: 1
          ShaderName: Skybox/Procedural
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - _SUNDISK_SIMPLE
            Messages: []
        - Variant: 1
          ShaderName: Skybox/Procedural
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - _SUNDISK_HIGH_QUALITY
            Messages: []
        - Variant: 1
          ShaderName: Skybox/Procedural
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - _SUNDISK_NONE
            - _SUNDISK_SIMPLE
            Messages: []
        - Variant: 1
          ShaderName: Skybox/Procedural
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - _SUNDISK_HIGH_QUALITY
            - _SUNDISK_SIMPLE
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: PreviewType
          Value: Skybox
        - Key: QUEUE
          Value: Background
        - Key: RenderType
          Value: Background
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PreviewType
        Value: Skybox
      - Key: QUEUE
        Value: Background
      - Key: RenderType
        Value: Background
    Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
      - _SUNDISK_SIMPLE
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump  vec4 vs_COLOR0;\nin highp  vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nin highp vec4
            in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump  vec4 vs_COLOR0;\nin highp  vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - ETC1_EXTERNAL_ALPHA
        - INSTANCING_ON
        - PIXELSNAP_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        - __
        KeywordGroups:
        - Keywords:
          - _
          - ETC1_EXTERNAL_ALPHA
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - _
          - PIXELSNAP_ON
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        CompilationErrors:
        - Variant: 1
          ShaderName: Sprites/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        - Variant: 1
          ShaderName: Sprites/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - PIXELSNAP_ON
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - PIXELSNAP_ON
    - ETC1_EXTERNAL_ALPHA
    - INSTANCING_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp  vec4 vs_TEXCOORD0;\nin
            highp  vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nin highp  vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nmediump float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.0399999991,
            -0.0399999991, -0.0399999991);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_41 = (-_Metallic) * 0.959999979 + 0.959999979;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = log2(u_xlat16_9.x);\n    u_xlat16_9.x = u_xlat16_9.x * unity_SpecCube0_HDR.y;\n   
            u_xlat16_9.x = exp2(u_xlat16_9.x);\n    u_xlat16_9.x = u_xlat16_9.x *
            unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx;\n   
            u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb44){\n       
            u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb44){\n           
            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat44
            = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz *
            vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = log2(u_xlat16_11.x);\n        u_xlat16_11.x = u_xlat16_11.x
            * unity_SpecCube1_HDR.y;\n        u_xlat16_11.x = exp2(u_xlat16_11.x);\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat40 = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat40
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat39 = u_xlat14 * u_xlat14 + 1.0;\n    u_xlat39 = float(1.0) / u_xlat39;\n   
            u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n   
            u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x *
            u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41
            = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin highp  vec4
            vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nin highp  vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nmediump float u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3
            u_xlatb11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nvec3 u_xlat14;\nvec3
            u_xlat17;\nmediump vec3 u_xlat16_25;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat
            u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump
            float u_xlat16_49;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n   
            u_xlat16_41 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat14.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_4 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_4 * _OcclusionStrength + u_xlat16_42;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlatb39 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb39){\n        u_xlat39 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat39 = inversesqrt(u_xlat39);\n        u_xlat17.xyz = vec3(u_xlat39)
            * u_xlat16_5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat17.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat17.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat17.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat39 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat39 =
            min(u_xlat7.z, u_xlat39);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat17.xyz = u_xlat17.xyz * vec3(u_xlat39) + u_xlat7.xyz;\n    } else
            {\n        u_xlat17.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_44 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_44 = u_xlat4 * u_xlat16_44;\n   
            u_xlat16_44 = u_xlat16_44 * 6.0;\n    u_xlat16_7 = textureLod(unity_SpecCube0,
            u_xlat17.xyz, u_xlat16_44);\n    u_xlat16_45 = u_xlat16_7.w + -1.0;\n   
            u_xlat16_45 = unity_SpecCube0_HDR.w * u_xlat16_45 + 1.0;\n    u_xlat16_45
            = log2(u_xlat16_45);\n    u_xlat16_45 = u_xlat16_45 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_45 = exp2(u_xlat16_45);\n    u_xlat16_45 = u_xlat16_45 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat16_7.xyz * vec3(u_xlat16_45);\n    u_xlatb39
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb39){\n       
            u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb39){\n           
            u_xlat39 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n            u_xlat39
            = inversesqrt(u_xlat39);\n            u_xlat17.xyz = vec3(u_xlat39) *
            u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat17.xyz;\n            u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz
            = u_xlat9.xyz / u_xlat17.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat17.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat39 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat39
            = min(u_xlat8.z, u_xlat39);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat17.xyz = u_xlat17.xyz
            * vec3(u_xlat39) + u_xlat8.xyz;\n        } else {\n            u_xlat17.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat17.xyz, u_xlat16_44);\n        u_xlat16_49 = u_xlat16_5.w + -1.0;\n       
            u_xlat16_49 = unity_SpecCube1_HDR.w * u_xlat16_49 + 1.0;\n        u_xlat16_49
            = log2(u_xlat16_49);\n        u_xlat16_49 = u_xlat16_49 * unity_SpecCube1_HDR.y;\n       
            u_xlat16_49 = exp2(u_xlat16_49);\n        u_xlat16_49 = u_xlat16_49 *
            unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat16_5.xyz * vec3(u_xlat16_49);\n       
            u_xlat17.xyz = vec3(u_xlat16_45) * u_xlat16_7.xyz + (-u_xlat16_12.xyz);\n       
            u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat17.xyz + u_xlat16_12.xyz;\n       
            u_xlat16_10.xyz = u_xlat10.xyz;\n    }\n    u_xlat16_10.xyz = vec3(u_xlat16_42)
            * u_xlat16_10.xyz;\n    u_xlat17.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx
            + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat17.xyz, u_xlat17.xyz);\n   
            u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat17.xyz = vec3(u_xlat39) * u_xlat17.xyz;\n    u_xlat39 = dot(u_xlat0.xyz,
            (-u_xlat14.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat17.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13
            = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);\n    u_xlat13 = clamp(u_xlat13,
            0.0, 1.0);\n    u_xlat16_45 = u_xlat13 + u_xlat13;\n    u_xlat16_45 =
            u_xlat13 * u_xlat16_45;\n    u_xlat16_45 = u_xlat16_45 * u_xlat4 + -0.5;\n   
            u_xlat16_49 = (-u_xlat1.x) + 1.0;\n    u_xlat16_12.x = u_xlat16_49 *
            u_xlat16_49;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_12.x;\n   
            u_xlat16_49 = u_xlat16_49 * u_xlat16_12.x;\n    u_xlat16_49 = u_xlat16_45
            * u_xlat16_49 + 1.0;\n    u_xlat16_12.x = -abs(u_xlat39) + 1.0;\n   
            u_xlat16_25.x = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_25.x = u_xlat16_25.x
            * u_xlat16_25.x;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_25.x;\n   
            u_xlat16_45 = u_xlat16_45 * u_xlat16_12.x + 1.0;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_49;\n    u_xlat26 = u_xlat1.x * u_xlat16_45;\n    u_xlat14.x
            = u_xlat4 * u_xlat4;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat27 = (-u_xlat14.x) + 1.0;\n    u_xlat40 = abs(u_xlat39) * u_xlat27
            + u_xlat14.x;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14.x;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14.x * u_xlat14.x;\n    u_xlat40
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat39 = u_xlat14.x * u_xlat14.x + 1.0;\n    u_xlat39 = float(1.0)
            / u_xlat39;\n    u_xlat16_45 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n   
            u_xlatb1 = u_xlat16_45!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41)
            + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41
            = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_25.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_42)
            + u_xlat16_25.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_45 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_45 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_45;\n    u_xlat16_25.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_25.xyz = u_xlat16_25.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_25.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_6.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_10.xyz
            * vec3(u_xlat39);\n    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_12.xxx * u_xlat16_6.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nin highp  vec4 vs_TEXCOORD0;\nin highp  vec4
            vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat u_xlat21;\nfloat
            u_xlat22;\nfloat u_xlat23;\nmediump float u_xlat16_24;\nmediump float
            u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat14 + 1.0;\n    u_xlat14
            = float(1.0) / u_xlat14;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat8 * u_xlat21;\n    u_xlat21 = u_xlat21 * 3.14159274;\n    u_xlat21
            = max(u_xlat21, 0.0);\n    u_xlat16_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_10.xyz = _Color.xyz * u_xlat16_1.xzw + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat1.xzw = u_xlat16_1.xzw * _Color.xyz;\n   
            u_xlat16_10.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_4.x =
            dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n    u_xlatb2 = u_xlat16_4.x!=0.0;\n   
            u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat21 = u_xlat21 * u_xlat2.x;\n   
            u_xlat2.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n    u_xlat16_4.x =
            (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x = u_xlat16_4.x * u_xlat16_4.x;\n   
            u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx + u_xlat16_10.xyz;\n   
            u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n    u_xlat16_4.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat7.x + -0.5;\n    u_xlat16_11.x = u_xlat16_3.x
            * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n    u_xlat16_11.x = u_xlat16_4.x
            * u_xlat16_3.x + 1.0;\n    u_xlat16_18 = (-u_xlat8) + 1.0;\n    u_xlat16_25
            = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat16_18 + 1.0;\n    u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n   
            u_xlat0.x = u_xlat8 * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_25 = (-_Metallic) * 0.959999979 + 0.959999979;\n   
            u_xlat16_5.xyz = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 =
            (-u_xlat16_25) + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n   
            u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat16_1.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat16_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nin
            highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin highp  vec4
            vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool
            u_xlatb3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3
            u_xlat9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nmediump
            float u_xlat16_15;\nfloat u_xlat18;\nfloat u_xlat19;\nmediump float u_xlat16_24;\nfloat
            u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_32;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx
            + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat0.x = dot(u_xlat9.xyz, u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x,
            0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat9.xyz;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz, u_xlat0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat9.x
            = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x * u_xlat9.x;\n    u_xlat18
            = max(u_xlat18, 0.00200000009);\n    u_xlat28 = u_xlat18 * u_xlat18;\n   
            u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n    u_xlat27 = u_xlat3.x
            * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27 + 1.00000001e-07;\n   
            u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27 = u_xlat28 / u_xlat27;\n   
            u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n    u_xlat10 = (-u_xlat18)
            + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10 + u_xlat18;\n    u_xlat28
            = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat28 = clamp(u_xlat28,
            0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10 + u_xlat18;\n    u_xlat18
            = u_xlat18 * u_xlat18 + 1.0;\n    u_xlat18 = float(1.0) / u_xlat18;\n   
            u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n    u_xlat16_4.x = -abs(u_xlat1.x)
            + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19 + u_xlat10;\n    u_xlat1.x
            = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x = 0.5 / u_xlat1.x;\n   
            u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat27 = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 0.0);\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_5.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_5.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz
            = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_32 = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_32 = u_xlat0.x * u_xlat16_32;\n    u_xlat16_32
            = u_xlat16_32 * u_xlat9.x + -0.5;\n    u_xlat16_6.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_32 * u_xlat16_4.x
            + 1.0;\n    u_xlat16_15 = (-u_xlat28) + 1.0;\n    u_xlat16_24 = u_xlat16_15
            * u_xlat16_15;\n    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;\n    u_xlat16_15
            = u_xlat16_15 * u_xlat16_24;\n    u_xlat16_32 = u_xlat16_32 * u_xlat16_15
            + 1.0;\n    u_xlat16_32 = u_xlat16_6.x * u_xlat16_32;\n    u_xlat0.x
            = u_xlat28 * u_xlat16_32;\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_32 = u_xlat16_0 * _OcclusionStrength
            + u_xlat16_32;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_32)
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp  vec4 vs_TEXCOORD0;\nin
            highp  vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nin highp  vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump float u_xlat16_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.0399999991,
            0.0399999991, 0.0399999991);\n    u_xlat16_41 = (-_Metallic) * 0.959999979
            + 0.959999979;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = log2(u_xlat16_9.x);\n    u_xlat16_9.x = u_xlat16_9.x * unity_SpecCube0_HDR.y;\n   
            u_xlat16_9.x = exp2(u_xlat16_9.x);\n    u_xlat16_9.x = u_xlat16_9.x *
            unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx;\n   
            u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb44){\n       
            u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb44){\n           
            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat44
            = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz *
            vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = log2(u_xlat16_11.x);\n        u_xlat16_11.x = u_xlat16_11.x
            * unity_SpecCube1_HDR.y;\n        u_xlat16_11.x = exp2(u_xlat16_11.x);\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat40 = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat40
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat39 = u_xlat14 * u_xlat14 + 1.0;\n    u_xlat39 = float(1.0) / u_xlat39;\n   
            u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n   
            u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x *
            u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41
            = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0,
            1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13)
            + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48
            = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n   
            u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz
            = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz
            = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz *
            u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz *
            vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube1;\nin
            highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin highp  vec4
            vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nin highp  vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec4
            u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump
            vec3 u_xlat16_10;\nbvec3 u_xlatb11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nvec3 u_xlat14;\nvec3 u_xlat17;\nmediump vec3 u_xlat16_25;\nfloat
            u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_44;\nmediump
            float u_xlat16_45;\nmediump float u_xlat16_49;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.0399999991,
            -0.0399999991, -0.0399999991);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_41 = (-_Metallic) * 0.959999979 + 0.959999979;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat14.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_4 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_4 * _OcclusionStrength + u_xlat16_42;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlatb39 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb39){\n        u_xlat39 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat39 = inversesqrt(u_xlat39);\n        u_xlat17.xyz = vec3(u_xlat39)
            * u_xlat16_5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat17.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat17.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat17.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat39 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat39 =
            min(u_xlat7.z, u_xlat39);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat17.xyz = u_xlat17.xyz * vec3(u_xlat39) + u_xlat7.xyz;\n    } else
            {\n        u_xlat17.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_44 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_44 = u_xlat4 * u_xlat16_44;\n   
            u_xlat16_44 = u_xlat16_44 * 6.0;\n    u_xlat16_7 = textureLod(unity_SpecCube0,
            u_xlat17.xyz, u_xlat16_44);\n    u_xlat16_45 = u_xlat16_7.w + -1.0;\n   
            u_xlat16_45 = unity_SpecCube0_HDR.w * u_xlat16_45 + 1.0;\n    u_xlat16_45
            = log2(u_xlat16_45);\n    u_xlat16_45 = u_xlat16_45 * unity_SpecCube0_HDR.y;\n   
            u_xlat16_45 = exp2(u_xlat16_45);\n    u_xlat16_45 = u_xlat16_45 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat16_7.xyz * vec3(u_xlat16_45);\n    u_xlatb39
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb39){\n       
            u_xlatb39 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb39){\n           
            u_xlat39 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n            u_xlat39
            = inversesqrt(u_xlat39);\n            u_xlat17.xyz = vec3(u_xlat39) *
            u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat17.xyz;\n            u_xlat9.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz
            = u_xlat9.xyz / u_xlat17.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat17.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x)
            ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y)
            ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z)
            ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat39 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat39
            = min(u_xlat8.z, u_xlat39);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat17.xyz = u_xlat17.xyz
            * vec3(u_xlat39) + u_xlat8.xyz;\n        } else {\n            u_xlat17.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat17.xyz, u_xlat16_44);\n        u_xlat16_49 = u_xlat16_5.w + -1.0;\n       
            u_xlat16_49 = unity_SpecCube1_HDR.w * u_xlat16_49 + 1.0;\n        u_xlat16_49
            = log2(u_xlat16_49);\n        u_xlat16_49 = u_xlat16_49 * unity_SpecCube1_HDR.y;\n       
            u_xlat16_49 = exp2(u_xlat16_49);\n        u_xlat16_49 = u_xlat16_49 *
            unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat16_5.xyz * vec3(u_xlat16_49);\n       
            u_xlat17.xyz = vec3(u_xlat16_45) * u_xlat16_7.xyz + (-u_xlat16_12.xyz);\n       
            u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat17.xyz + u_xlat16_12.xyz;\n       
            u_xlat16_10.xyz = u_xlat10.xyz;\n    }\n    u_xlat16_10.xyz = vec3(u_xlat16_42)
            * u_xlat16_10.xyz;\n    u_xlat17.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx
            + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat17.xyz, u_xlat17.xyz);\n   
            u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat17.xyz = vec3(u_xlat39) * u_xlat17.xyz;\n    u_xlat39 = dot(u_xlat0.xyz,
            (-u_xlat14.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat17.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13
            = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);\n    u_xlat13 = clamp(u_xlat13,
            0.0, 1.0);\n    u_xlat16_45 = u_xlat13 + u_xlat13;\n    u_xlat16_45 =
            u_xlat13 * u_xlat16_45;\n    u_xlat16_45 = u_xlat16_45 * u_xlat4 + -0.5;\n   
            u_xlat16_49 = (-u_xlat1.x) + 1.0;\n    u_xlat16_12.x = u_xlat16_49 *
            u_xlat16_49;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_12.x;\n   
            u_xlat16_49 = u_xlat16_49 * u_xlat16_12.x;\n    u_xlat16_49 = u_xlat16_45
            * u_xlat16_49 + 1.0;\n    u_xlat16_12.x = -abs(u_xlat39) + 1.0;\n   
            u_xlat16_25.x = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_25.x = u_xlat16_25.x
            * u_xlat16_25.x;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_25.x;\n   
            u_xlat16_45 = u_xlat16_45 * u_xlat16_12.x + 1.0;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_49;\n    u_xlat26 = u_xlat1.x * u_xlat16_45;\n    u_xlat14.x
            = u_xlat4 * u_xlat4;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat27 = (-u_xlat14.x) + 1.0;\n    u_xlat40 = abs(u_xlat39) * u_xlat27
            + u_xlat14.x;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14.x;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat40
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14.x * u_xlat14.x;\n    u_xlat40
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat40 * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlat39 = u_xlat14.x * u_xlat14.x + 1.0;\n    u_xlat39 = float(1.0)
            / u_xlat39;\n    u_xlat16_45 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n   
            u_xlatb1 = u_xlat16_45!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41)
            + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41
            = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_25.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_42)
            + u_xlat16_25.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_45 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_45 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_45;\n    u_xlat16_25.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_25.xyz = u_xlat16_25.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_25.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_6.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_10.xyz
            * vec3(u_xlat39);\n    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_12.xxx * u_xlat16_6.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - _
          - _PARALLAXMAP
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        CompilationErrors:
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - _GLOSSYREFLECTIONS_OFF
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            - _GLOSSYREFLECTIONS_OFF
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - _EMISSION
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            - _EMISSION
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin highp  vec4
            vs_TEXCOORD2;\nin highp  vec4 vs_TEXCOORD3;\nin highp  vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat
            u_xlat18;\nfloat u_xlat19;\nbool u_xlatb19;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat2.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n    u_xlat3.xyz
            = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat0.x * u_xlat18;\n    u_xlat18 = u_xlat18 * 3.14159274;\n    u_xlat18
            = max(u_xlat18, 0.0);\n    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_10.xyz = _Color.xyz * u_xlat16_1.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_10.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_5.x =
            dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n    u_xlatb19 = u_xlat16_5.x!=0.0;\n   
            u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n    u_xlat18 = u_xlat18 * u_xlat19;\n   
            u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n    u_xlat16_5.x =
            (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x * u_xlat16_5.x;\n   
            u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_5.x = u_xlat16_5.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx +
            u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.959999979 + 0.959999979;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - _
          - _PARALLAXMAP
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 0
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - _
          - _PARALLAXMAP
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    - Index: 1
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin
            highp  vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n   
            u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz
            * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.y;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x *
            unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz
            = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.959999979
            + 0.959999979;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_7.xyz
            = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8)
            * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx
            * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp  vec4 vs_TEXCOORD0;\nin highp  vec4 vs_TEXCOORD1;\nin
            highp  vec4 vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.y;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n   
            u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz
            = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.959999979 + 0.959999979;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.0399999991,
            0.0399999991, 0.0399999991);\n    u_xlat16_9.xyz = vec3(u_xlat16_34)
            + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz
            + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n   
            SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp  vec4 vs_TEXCOORD0;\nin highp 
            vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump float u_xlat16_0;\nvec3
            u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n    u_xlat18
            = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2 = (-u_xlat18) + 1.0;\n   
            u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat16_6.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat6.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2 * u_xlat16_2;\n    u_xlat0.x
            = u_xlat16_2 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2 * u_xlat0.x;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_0) * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nin highp  vec4 vs_TEXCOORD0;\nin highp 
            vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump float u_xlat16_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat24;\nmediump float u_xlat16_26;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat16_26 = (-u_xlat1.x) + 1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n   
            u_xlat16_26 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_3.x
            = (-u_xlat16_26) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n   
            u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat16_1.xyz
            + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat1.xyz
            = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_26)
            * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n   
            u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n    u_xlat16_8 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz = vec3(u_xlat16_8)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_8)
            * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_5.xyz;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp  vec4 vs_TEXCOORD0;\nin highp 
            vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nlayout(location = 0)
            out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x
            * unity_SpecCube0_HDR.y;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n   
            u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz
            = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.959999979
            + 0.959999979;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_7.xyz
            = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8)
            * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx
            * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp  vec4 vs_TEXCOORD0;\nin highp 
            vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD4;\nin mediump  vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.y;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n   
            u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz
            = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x =
            dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.959999979 + 0.959999979;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.0399999991, -0.0399999991,
            -0.0399999991);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.0399999991,
            0.0399999991, 0.0399999991);\n    u_xlat16_9.xyz = vec3(u_xlat16_34)
            + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz
            + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 52
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        CompilationErrors:
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - _GLOSSYREFLECTIONS_OFF
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            - _GLOSSYREFLECTIONS_OFF
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - _EMISSION
            Messages: []
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 0
            ShaderVariantKeywords:
            - DIRECTIONAL
            - LIGHTPROBE_SH
            - _EMISSION
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D unity_NHxRoughness;\nin highp  vec4 vs_TEXCOORD0;\nin
            highp  vec4 vs_TEXCOORD1;\nin highp  vec4 vs_TEXCOORD2;\nin highp  vec4
            vs_TEXCOORD3;\nin highp  vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3
            u_xlat16_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_5.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz
            * u_xlat16_5.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n   
            u_xlat5.xyz = u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.0399999991, 0.0399999991,
            0.0399999991);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - POINT
        - Keywords:
          - DIRECTIONAL
        - Keywords:
          - SPOT
        - Keywords:
          - POINT_COOKIE
        - Keywords:
          - DIRECTIONAL_COOKIE
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
        KeywordsMinimalCardinality: 35
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors:
        - Variant: 1
          ShaderName: Standard
          Details:
          - SubShaderIndex: 1
            PassId: 1
            ShaderVariantKeywords:
            - DIRECTIONAL
            Messages: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
        - Keywords:
          - _
          - _METALLICGLOSSMAP
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 1
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - _ALPHABLEND_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _METALLICGLOSSMAP
    - _NORMALMAP
    - _PARALLAXMAP
    - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
    - _SPECULARHIGHLIGHTS_OFF
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _DETAIL_MULX2
    - __
    - _
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nuniform
            \tint _UIVertexColorAlwaysGammaSpace;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * vec3(0.265884995, 0.265884995, 0.265884995) + vec3(0.736584008,
            0.736584008, 0.736584008);\n    u_xlat16_2.xyz = in_COLOR0.xyz * u_xlat16_2.xyz
            + vec3(-0.00980184041, -0.00980184041, -0.00980184041);\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * u_xlat16_2.xyz + vec3(0.00319697009, 0.00319697009,
            0.00319697009);\n    u_xlat16_3.xyz = in_COLOR0.xyz * vec3(0.0849710032,
            0.0849710032, 0.0849710032) + vec3(-0.000163029006, -0.000163029006,
            -0.000163029006);\n    u_xlatb0.xyz = lessThan(in_COLOR0.xyzx, vec4(0.0725490004,
            0.0725490004, 0.0725490004, 0.0)).xyz;\n    {\n        vec3 hlslcc_movcTemp
            = u_xlat16_2;\n        hlslcc_movcTemp.x = (u_xlatb0.x) ? u_xlat16_3.x
            : u_xlat16_2.x;\n        hlslcc_movcTemp.y = (u_xlatb0.y) ? u_xlat16_3.y
            : u_xlat16_2.y;\n        hlslcc_movcTemp.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n        u_xlat16_2 = hlslcc_movcTemp;\n    }\n    u_xlat1.xyz
            = (int(_UIVertexColorAlwaysGammaSpace) != 0) ? u_xlat16_2.xyz : in_COLOR0.xyz;\n   
            u_xlat1.w = in_COLOR0.w;\n    u_xlat1 = u_xlat1 * _Color;\n    vs_COLOR0
            = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy
            * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy
            * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n   
            u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25)
            + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n   
            u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy
            = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy
            = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump  vec4 vs_COLOR0;\nin
            highp  vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nuniform
            \tint _UIVertexColorAlwaysGammaSpace;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * vec3(0.265884995, 0.265884995, 0.265884995) + vec3(0.736584008,
            0.736584008, 0.736584008);\n    u_xlat16_2.xyz = in_COLOR0.xyz * u_xlat16_2.xyz
            + vec3(-0.00980184041, -0.00980184041, -0.00980184041);\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * u_xlat16_2.xyz + vec3(0.00319697009, 0.00319697009,
            0.00319697009);\n    u_xlat16_3.xyz = in_COLOR0.xyz * vec3(0.0849710032,
            0.0849710032, 0.0849710032) + vec3(-0.000163029006, -0.000163029006,
            -0.000163029006);\n    u_xlatb0.xyz = lessThan(in_COLOR0.xyzx, vec4(0.0725490004,
            0.0725490004, 0.0725490004, 0.0)).xyz;\n    {\n        vec3 hlslcc_movcTemp
            = u_xlat16_2;\n        hlslcc_movcTemp.x = (u_xlatb0.x) ? u_xlat16_3.x
            : u_xlat16_2.x;\n        hlslcc_movcTemp.y = (u_xlatb0.y) ? u_xlat16_3.y
            : u_xlat16_2.y;\n        hlslcc_movcTemp.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n        u_xlat16_2 = hlslcc_movcTemp;\n    }\n    u_xlat1.xyz
            = (int(_UIVertexColorAlwaysGammaSpace) != 0) ? u_xlat16_2.xyz : in_COLOR0.xyz;\n   
            u_xlat1.w = in_COLOR0.w;\n    u_xlat1 = u_xlat1 * _Color;\n    vs_COLOR0
            = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy
            * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy
            * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n   
            u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25)
            + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n   
            u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy
            = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy
            = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump  vec4 vs_COLOR0;\nin
            highp  vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            float u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n    u_xlat16_0.x =
            vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nuniform
            \tint _UIVertexColorAlwaysGammaSpace;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * vec3(0.265884995, 0.265884995, 0.265884995) + vec3(0.736584008,
            0.736584008, 0.736584008);\n    u_xlat16_2.xyz = in_COLOR0.xyz * u_xlat16_2.xyz
            + vec3(-0.00980184041, -0.00980184041, -0.00980184041);\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * u_xlat16_2.xyz + vec3(0.00319697009, 0.00319697009,
            0.00319697009);\n    u_xlat16_3.xyz = in_COLOR0.xyz * vec3(0.0849710032,
            0.0849710032, 0.0849710032) + vec3(-0.000163029006, -0.000163029006,
            -0.000163029006);\n    u_xlatb0.xyz = lessThan(in_COLOR0.xyzx, vec4(0.0725490004,
            0.0725490004, 0.0725490004, 0.0)).xyz;\n    {\n        vec3 hlslcc_movcTemp
            = u_xlat16_2;\n        hlslcc_movcTemp.x = (u_xlatb0.x) ? u_xlat16_3.x
            : u_xlat16_2.x;\n        hlslcc_movcTemp.y = (u_xlatb0.y) ? u_xlat16_3.y
            : u_xlat16_2.y;\n        hlslcc_movcTemp.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n        u_xlat16_2 = hlslcc_movcTemp;\n    }\n    u_xlat1.xyz
            = (int(_UIVertexColorAlwaysGammaSpace) != 0) ? u_xlat16_2.xyz : in_COLOR0.xyz;\n   
            u_xlat1.w = in_COLOR0.w;\n    u_xlat1 = u_xlat1 * _Color;\n    vs_COLOR0
            = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy
            * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy
            * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n   
            u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25)
            + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n   
            u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy
            = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy
            = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump  vec4 vs_COLOR0;\nin highp  vec2 vs_TEXCOORD0;\nin highp  vec4
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump
            vec4 u_xlat16_2;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 =
            vs_COLOR0.w * 255.0;\n    u_xlat16_4 = roundEven(u_xlat16_4);\n    u_xlat16_0.w
            = u_xlat16_4 * 0.00392156886;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat2 = u_xlat16_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nuniform
            \tint _UIVertexColorAlwaysGammaSpace;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nbvec3 u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * vec3(0.265884995, 0.265884995, 0.265884995) + vec3(0.736584008,
            0.736584008, 0.736584008);\n    u_xlat16_2.xyz = in_COLOR0.xyz * u_xlat16_2.xyz
            + vec3(-0.00980184041, -0.00980184041, -0.00980184041);\n    u_xlat16_2.xyz
            = in_COLOR0.xyz * u_xlat16_2.xyz + vec3(0.00319697009, 0.00319697009,
            0.00319697009);\n    u_xlat16_3.xyz = in_COLOR0.xyz * vec3(0.0849710032,
            0.0849710032, 0.0849710032) + vec3(-0.000163029006, -0.000163029006,
            -0.000163029006);\n    u_xlatb0.xyz = lessThan(in_COLOR0.xyzx, vec4(0.0725490004,
            0.0725490004, 0.0725490004, 0.0)).xyz;\n    {\n        vec3 hlslcc_movcTemp
            = u_xlat16_2;\n        hlslcc_movcTemp.x = (u_xlatb0.x) ? u_xlat16_3.x
            : u_xlat16_2.x;\n        hlslcc_movcTemp.y = (u_xlatb0.y) ? u_xlat16_3.y
            : u_xlat16_2.y;\n        hlslcc_movcTemp.z = (u_xlatb0.z) ? u_xlat16_3.z
            : u_xlat16_2.z;\n        u_xlat16_2 = hlslcc_movcTemp;\n    }\n    u_xlat1.xyz
            = (int(_UIVertexColorAlwaysGammaSpace) != 0) ? u_xlat16_2.xyz : in_COLOR0.xyz;\n   
            u_xlat1.w = in_COLOR0.w;\n    u_xlat1 = u_xlat1 * _Color;\n    vs_COLOR0
            = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy +
            _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy
            * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy
            * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n   
            u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25)
            + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n   
            u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n   
            u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy
            = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy
            = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump  vec4 vs_COLOR0;\nin highp  vec2 vs_TEXCOORD0;\nin highp  vec4
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump float u_xlat16_2;\nmediump float u_xlat16_5;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy
            * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2
            + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - _
        KeywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors:
        - Variant: 1
          ShaderName: UI/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords: []
            Messages: []
        - Variant: 1
          ShaderName: UI/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - UNITY_UI_ALPHACLIP
            Messages: []
        - Variant: 1
          ShaderName: UI/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - UNITY_UI_CLIP_RECT
            Messages: []
        - Variant: 1
          ShaderName: UI/Default
          Details:
          - SubShaderIndex: 0
            PassId: 0
            ShaderVariantKeywords:
            - UNITY_UI_ALPHACLIP
            - UNITY_UI_CLIP_RECT
            Messages: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  _modifiedShaders: []
  invalidShaders: 0
  _sceneLightData:
    PointLightCount: 0
    SpotLightCount: 0
    DirectionalLightCount: 58
    LightmapOn: 1
    DirlightmapCombined: 1
    DirectionalCookieExists: 0
    PointCookieExists: 0
    SpotCookieExists: 0
    AddiitonalLightsKeywordRequired: 0
